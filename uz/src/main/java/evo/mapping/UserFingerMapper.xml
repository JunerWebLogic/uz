<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="evo.dao.UserFingerMapper" >
  <resultMap id="BaseResultMap" type="evo.model.UserFinger" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="finger1_url" property="finger1Url" jdbcType="VARCHAR" />
    <result column="finger2_url" property="finger2Url" jdbcType="VARCHAR" />
    <result column="finger3_url" property="finger3Url" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="evo.model.UserFingerWithBLOBs" extends="BaseResultMap" >
    <result column="finger1_photo" property="finger1Photo" jdbcType="LONGVARBINARY" />
    <result column="finger2_photo" property="finger2Photo" jdbcType="LONGVARBINARY" />
    <result column="finger3_photo" property="finger3Photo" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, finger1_url, finger2_url, finger3_url
  </sql>
  <sql id="Blob_Column_List" >
    finger1_photo, finger2_photo, finger3_photo
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_finger
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_finger
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="evo.model.UserFingerWithBLOBs" >
    insert into user_finger (id, user_id, finger1_url, 
      finger2_url, finger3_url, finger1_photo, 
      finger2_photo, finger3_photo)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{finger1Url,jdbcType=VARCHAR}, 
      #{finger2Url,jdbcType=VARCHAR}, #{finger3Url,jdbcType=VARCHAR}, #{finger1Photo,jdbcType=LONGVARBINARY}, 
      #{finger2Photo,jdbcType=LONGVARBINARY}, #{finger3Photo,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="evo.model.UserFingerWithBLOBs" >
    insert into user_finger
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="finger1Url != null" >
        finger1_url,
      </if>
      <if test="finger2Url != null" >
        finger2_url,
      </if>
      <if test="finger3Url != null" >
        finger3_url,
      </if>
      <if test="finger1Photo != null" >
        finger1_photo,
      </if>
      <if test="finger2Photo != null" >
        finger2_photo,
      </if>
      <if test="finger3Photo != null" >
        finger3_photo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="finger1Url != null" >
        #{finger1Url,jdbcType=VARCHAR},
      </if>
      <if test="finger2Url != null" >
        #{finger2Url,jdbcType=VARCHAR},
      </if>
      <if test="finger3Url != null" >
        #{finger3Url,jdbcType=VARCHAR},
      </if>
      <if test="finger1Photo != null" >
        #{finger1Photo,jdbcType=LONGVARBINARY},
      </if>
      <if test="finger2Photo != null" >
        #{finger2Photo,jdbcType=LONGVARBINARY},
      </if>
      <if test="finger3Photo != null" >
        #{finger3Photo,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="evo.model.UserFingerWithBLOBs" >
    update user_finger
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="finger1Url != null" >
        finger1_url = #{finger1Url,jdbcType=VARCHAR},
      </if>
      <if test="finger2Url != null" >
        finger2_url = #{finger2Url,jdbcType=VARCHAR},
      </if>
      <if test="finger3Url != null" >
        finger3_url = #{finger3Url,jdbcType=VARCHAR},
      </if>
      <if test="finger1Photo != null" >
        finger1_photo = #{finger1Photo,jdbcType=LONGVARBINARY},
      </if>
      <if test="finger2Photo != null" >
        finger2_photo = #{finger2Photo,jdbcType=LONGVARBINARY},
      </if>
      <if test="finger3Photo != null" >
        finger3_photo = #{finger3Photo,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="evo.model.UserFingerWithBLOBs" >
    update user_finger
    set user_id = #{userId,jdbcType=INTEGER},
      finger1_url = #{finger1Url,jdbcType=VARCHAR},
      finger2_url = #{finger2Url,jdbcType=VARCHAR},
      finger3_url = #{finger3Url,jdbcType=VARCHAR},
      finger1_photo = #{finger1Photo,jdbcType=LONGVARBINARY},
      finger2_photo = #{finger2Photo,jdbcType=LONGVARBINARY},
      finger3_photo = #{finger3Photo,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="evo.model.UserFinger" >
    update user_finger
    set user_id = #{userId,jdbcType=INTEGER},
      finger1_url = #{finger1Url,jdbcType=VARCHAR},
      finger2_url = #{finger2Url,jdbcType=VARCHAR},
      finger3_url = #{finger3Url,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>